	core
+ boot status
	+ module load
		+ dependency
	test
+ onload test all modules
	+ report success
	+ report error
		- in module test storage??? or in test storage
	- write tests

	<ui>
+ split ui into instance ui and model ui
		+ bugs: user update actions bug, possible user model instance initialization failure
- create element data storage to prevent every-time load
- refactor all instanes as submodules with ui-module as interface
		<container>
- create container types: single, named and list
	+ named
	+ list
	+ single
		<element>
- map element attributes and actions to data model instance

	<role>
- implement role to handle all in model stuff

	<model>
- create data model design
		[project]
	-+ create instance ui
- refactor ui names to folders with appropriate model names or smth 

	<log>
+ create log module with extended functionality:
	+ warnings
	+ per instance handling
	+ per type handling

	app
- create app instance that holds all app related data

+ all
	+ refactor all console output
	+ refactor all error cases to be 0 and error number
